genes
filter(genes, refsnp_id == "rs12730396")
paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=",12730396,"&retmode=text")
paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=",c(1,12730396),"&retmode=text")
paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=",a$SNP,"&retmode=text")
paste(a$SNP, collapse = ",")
paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=",paste(a$SNP, collapse = ","),"&retmode=text")
## generate SNPdb query url
url = paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=",paste(a$SNP, collapse = ","),"&retmode=text")
## generate SNPdb query url
library(xml2)
url = paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=",paste(a$SNP, collapse = ","))
read_xml(url)
url = paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=",paste(a$SNP, collapse = ","),"&retmode=text")
read_xml(url)
install.packages("JSON")
install.packages("rjson")
library(rjson)
fromJSON(url)
fromJSON("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=268,328&rettype=json&retmode=text")
read_xml(url)
read.csv("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=268,328&rettype=json&retmode=text")
read.csv("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=268,328&rettype=json")
read.csv("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=268&retmode=text")
read_xml()
read_xml("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=268,328&rettype=json&retmode=text")
read_xml("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=268,328&retmode=text")
read_xml("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=268,328)
)
read_xml("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=268,328))
read_xml("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=268")
b = read_xml("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=268")
b
b[[2]]
b = read_xml("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=268,325")
b = read_xml("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=325")
b
b[[1]]
b[1]
b$doc
b
b = read_xml("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=rs12730396")
b
b = read_xml("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=114513923")
b
rsID = "rs12730396"
xml_data = read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
xml_data
xml_find_all(xml_data, "//GENES")
rsID = "rs114513923"
xml_data = read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
find = xml_find_all(xml_data, "//GENES")
find
library(stringr)
str_extract(find, "(?<=<NAME>).*?(?=<)")
print(find)
as.character(find)
str_extract(as.character(find), "(?<=<NAME>).*?(?=<)")
getGeneName = function(rsID){
xml_data = read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
find = xml_find_all(xml_data, "//GENES")
result = str_extract(as.character(find), "(?<=<NAME>).*?(?=<)")
return(result)
}
getGeneName("rs12730396")
a
a %>%
rowwise() %>%
mutate(GENES = getGeneName(SNP))
a %>%
rowwise() %>%
mutate(GENES = getGeneName(SNP))
?Sys.sleep
Sys.sleep(0.1)
getGeneName = function(rsID){
xml_data = read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
find = xml_find_all(xml_data, "//GENES")
result = str_extract(as.character(find), "(?<=<NAME>).*?(?=<)")
Sys.sleep(0.1)
return(result)
}
a %>%
rowwise() %>%
mutate(GENES = getGeneName(SNP))
rlang::last_trace()
a %>%
rowwise() %>%
mutate(GENES = getGeneName(SNP))
getGeneName = function(rsID){
xml_data = read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
find = xml_find_all(xml_data, "//GENES")
result = str_extract(as.character(find), "(?<=<NAME>).*?(?=<)")
Sys.sleep(0.01)
return(result)
}
a = a %>%
rowwise() %>%
mutate(GENES = getGeneName(SNP))
a = a %>%
rowwise() %>%
mutate(GENES = getGeneName(SNP))
a
#Sys.sleep(0.01)
return(result)
getGeneName = function(rsID){
xml_data = read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
find = xml_find_all(xml_data, "//GENES")
result = str_extract(as.character(find), "(?<=<NAME>).*?(?=<)")
#Sys.sleep(0.01)
return(result)
print(result)
}
a = a %>%
rowwise() %>%
mutate(GENES = getGeneName(SNP))
library(stringr)
getGeneName = function(rsID){
xml_data = read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
find = xml_find_all(xml_data, "//GENES")
result = str_extract(as.character(find), "(?<=<NAME>).*?(?=<)")
#Sys.sleep(0.01)
print(result)
return(result)
}
a = a %>%
rowwise() %>%
mutate(GENES = getGeneName(SNP))
a = a %>%
rowwise() %>%
mutate(GENES = getGeneName(SNP))
getGeneName = function(rsID){
xml_data = read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
find = xml_find_all(xml_data, "//GENES")
result = str_extract(as.character(find), "(?<=<NAME>).*?(?=<)")
Sys.sleep(0.01)
print(result)
return(result)
}
a = a %>%
rowwise() %>%
mutate(GENES = getGeneName(SNP))
getGeneName = function(rsID){
xml_data = read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
find = xml_find_all(xml_data, "//GENES")
result = str_extract(as.character(find), "(?<=<NAME>).*?(?=<)")
Sys.sleep(0.02)
print(result)
return(result)
}
a = a %>%
rowwise() %>%
mutate(GENES = getGeneName(SNP))
read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
print(read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID)))
as.character(read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID)))
rsID = "rs128,rs382"
as.character(read_xml(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID)))
library(httr)
GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
response = GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID))
xml_content <- content(response, as = "text")
xml_content
xml_content <- sub("<?xml[^>]*?>", "", xml_content)
xml_content <- paste("<root>", xml_content, "</root>")
xml_doc <- read_xml(xml_content)
xml_doc
xml_doc[[1]]
xml_doc[1]
View(xml_doc)
rsID = c(rsID, "rs12730396")
rsID
rsID = c("rs128", "rs382", "rs12730396")
response = GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID, collapse = ","))
xml_content <- content(response, as = "text")
xml_content <- sub("<?xml[^>]*?>", "", xml_content)
xml_content <- paste("<root>", xml_content, "</root>")
xml_doc <- read_xml(xml_content)
xml_doc
xml_content
paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", rsID, collapse = ",")
paste(rsID, collapse = ",")
paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(rsID, collapse = ","))
response = GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(rsID, collapse = ",")))
xml_content <- content(response, as = "text")
xml_content <- sub("<?xml[^>]*?>", "", xml_content)
xml_content <- paste("<root>", xml_content, "</root>")
xml_doc <- read_xml(xml_content)
xml_doc
xml_children(xml_doc)
xml_children(xml_doc)[1]
for (record in xml_children(xml_doc)){
snp_id <- xml_text(xml_find_first(doc, ".//SNP_ID"))
print(snp_id)
}
for (record in xml_children(xml_doc)){
snp_id <- xml_text(xml_find_first(doc, ".//SNP_ID"))
print(snp_id)
}
snp_id <- xml_text(xml_find_first(record, ".//SNP_ID"))
for (record in xml_children(xml_doc)){
snp_id <- xml_text(xml_find_first(record, ".//SNP_ID"))
print(snp_id)
}
for (record in xml_children(xml_doc)){
snp_id <- xml_text(xml_find_first(record, ".//NAME"))
print(snp_id)
}
response = GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(a$SNP, collapse = ",")))
xml_content <- content(response, as = "text")
xml_content <- sub("<?xml[^>]*?>", "", xml_content)
xml_content <- paste("<root>", xml_content, "</root>")
xml_doc <- read_xml(xml_content)
for (record in xml_children(xml_doc)){
snp_id <- xml_text(xml_find_first(record, ".//NAME"))
print(snp_id)
}
# query on the
response = GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(data1$SNP, collapse = ",")))
# query on the
response = GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(a$SNP, collapse = ",")))
xml_content <- content(response, as = "text")
xml_content <- sub("<?xml[^>]*?>", "", xml_content)
xml_content <- paste("<root>", xml_content, "</root>")
xml_doc <- read_xml(xml_content)
for (record in xml_children(xml_doc)){
snp_id <- xml_text(xml_find_first(record, ".//NAME"))
print(snp_id)
}
a
manhattan(data1, p = "P.R.", annotatePval = 1e-250)
data1 = filter(data, N >=5 & P.R. <= 1e-250)%>%
tidyr::drop_na()
manhattan(data1, p = "P.R.", annotatePval = 1e-250)
# query url, cannot query too many or will out of memory
response = GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(data1$SNP, collapse = ",")))
data1 = filter(data, N >=5 & P.R. <= 1e-250 & P.R. != 0)%>%
tidyr::drop_na()
manhattan(data1, p = "P.R.", annotatePval = 1e-250)
# query url, cannot query too many or will out of memory
response = GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(data1$SNP, collapse = ",")))
xml_content <- content(response, as = "text")
xml_content <- sub("<?xml[^>]*?>", "", xml_content)
xml_content <- paste("<root>", xml_content, "</root>")
xml_doc <- read_xml(xml_content)
for (record in xml_children(xml_doc)){
snp_id <- xml_text(xml_find_first(record, ".//NAME"))
print(snp_id)
}
data.gname = data1
gnames = c()
data1 %>%
mutate(GENE = gnames)
gnames = c()
for (record in xml_children(xml_doc)){
gname <- xml_text(xml_find_first(record, ".//NAME"))
gnames = c(gnames, gname)
}
data1 %>%
mutate(GENE = gnames)
data1 = filter(data, N >=5 & P.R. <= 1e-200 & P.R. != 0)%>%
tidyr::drop_na()
data1 = filter(data, N >=5 & P.R. <= 1e-100 & P.R. != 0)%>%
tidyr::drop_na()
manhattan(data1, p = "P.R.", annotatePval = 1e-250)
# query url, cannot query too many or will out of memory
response = GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(data1$SNP, collapse = ",")))
xml_content <- content(response, as = "text")
# query url, cannot query too many or will out of memory
response = GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(data1$SNP, collapse = ",")))
xml_content <- content(response, as = "text")
xml_content <- sub("<?xml[^>]*?>", "", xml_content)
xml_content <- paste("<root>", xml_content, "</root>")
xml_doc <- read_xml(xml_content)
gnames = c()
for (record in xml_children(xml_doc)){
gname <- xml_text(xml_find_first(record, ".//NAME"))
gnames = c(gnames, gname)
}
data.gname = data1 %>%
mutate(GENE = gnames)
xml_content
paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(data1$SNP, collapse = ","))
GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(data1$SNP, collapse = ",")))
data1 = filter(data, N >=5 & P.R. <= 1e-150 & P.R. != 0)%>%
tidyr::drop_na()
manhattan(data1, p = "P.R.", annotatePval = 1e-250)
# query url, cannot query too many or will out of memory
response = GET(paste0("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id=", paste(data1$SNP, collapse = ",")))
xml_content <- content(response, as = "text")
xml_content <- sub("<?xml[^>]*?>", "", xml_content)
xml_content <- paste("<root>", xml_content, "</root>")
xml_doc <- read_xml(xml_content)
gnames = c()
for (record in xml_children(xml_doc)){
gname <- xml_text(xml_find_first(record, ".//NAME"))
gnames = c(gnames, gname)
}
data.gname = data1 %>%
mutate(GENE = gnames)
data.gname
View(data.gname)
manhattan(filter(gwas.data, P.R. <= 1e-300, I <= 50, N >= 3))
data1 = filter(data, N >=5 & P.R. <= 1e-150 & P.R. != 0)%>%
tidyr::drop_na()
data1 = filter(data, N >=5 & P.R. <= 1e-250 & P.R. != 0)%>%
tidyr::drop_na()
manhattan(data1, p = "P.R.", annotatePval = 1e-250)
data1 = filter(data, N >=5 & P.R. <= 1e-100 & P.R. != 0)%>%
tidyr::drop_na()
manhattan(data1, p = "P.R.", annotatePval = 1e-250)
data1 = filter(data, N >=5 & P.R. <= 1e-5 & P.R. != 0)%>%
tidyr::drop_na()
manhattan(data1, p = "P.R.", annotatePval = 1e-250)
View(data)
library(dplyr)
data1 = tibble(read.csv("studyData/files/GCST90016595_buildGRCh37.tsv", sep = "\t"))
data2 = tibble(read.csv("studyData/files/GCST90016604_buildGRCh37.tsv", sep = "\t"))
list.files("studyData/files")
file =  list.files("studyData/files")
formatted_data1 = data1 %>%
select(
SNP = variant_id,
CHR = chromosome,
BP = base_pair_location,
A1 = effect_allele,
A2 = other_allele,
OR = beta,  # assuming that 'beta' represents the odds ratio here
SE = standard_error,
P = p_value
)
formatted_data1 = data1 %>%
dplyr::select(
SNP = variant_id,
CHR = chromosome,
BP = base_pair_location,
A1 = effect_allele,
A2 = other_allele,
OR = beta,  # assuming that 'beta' represents the odds ratio here
SE = standard_error,
P = p_value
)
formatted_data2 = data2 %>%
dplyr::select(
SNP = variant_id,
CHR = chromosome,
BP = base_pair_location,
A1 = effect_allele,
A2 = other_allele,
OR = beta,  # assuming that 'beta' represents the odds ratio here
SE = standard_error,
P = p_value
)
formatted_data1
formatted_data2
# Save the formatted data
write.table(formatted_data1, "studyData/processed_files/GCST90016595_buildGRCh37_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
write.table(formatted_data2, "studyData/processed_files/GCST90016604_buildGRCh37_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
file
list.files("studyData/processed_data")
list.files("studyData/processed_files")
data1 = tibble(read.csv("studyData/files/GCST90016612_buildGRCh37.tsv", sep = "\t"))
data2 = tibble(read.csv("studyData/files/GCST90016618_buildGRCh37.tsv", sep = "\t"))
formatted_data1 = data1 %>%
dplyr::select(
SNP = variant_id,
CHR = chromosome,
BP = base_pair_location,
A1 = effect_allele,
A2 = other_allele,
OR = beta,  # assuming that 'beta' represents the odds ratio here
SE = standard_error,
P = p_value
)
formatted_data2 = data2 %>%
dplyr::select(
SNP = variant_id,
CHR = chromosome,
BP = base_pair_location,
A1 = effect_allele,
A2 = other_allele,
OR = beta,  # assuming that 'beta' represents the odds ratio here
SE = standard_error,
P = p_value
)
# Save the formatted data
write.table(formatted_data1, "studyData/processed_files/GCST90016612_buildGRCh37_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
write.table(formatted_data2, "studyData/processed_files/GCST90016618_buildGRCh37_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
list.files("studyData/processed_files")
data1 = tibble(read.csv("studyData/files/GCST012597_buildGRCh37.tsv", sep = "\t"))
data2 = tibble(read.csv("studyData/files/GCST005362_buildGRCh37.tsv", sep = "\t"))
formatted_data1 = data1 %>%
dplyr::select(
SNP = variant_id,
CHR = chromosome,
BP = base_pair_location,
A1 = effect_allele,
A2 = other_allele,
OR = beta,  # assuming that 'beta' represents the odds ratio here
SE = standard_error,
P = p_value
)
formatted_data2 = data2 %>%
dplyr::select(
SNP = variant_id,
CHR = chromosome,
BP = base_pair_location,
A1 = effect_allele,
A2 = other_allele,
OR = beta,  # assuming that 'beta' represents the odds ratio here
SE = standard_error,
P = p_value
)
# Save the formatted data
write.table(formatted_data1, "studyData/processed_files/GCST012597_buildGRCh37_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
write.table(formatted_data2, "studyData/processed_files/GCST005362_buildGRCh37_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
list.files("studyData/processed_files")
data1 = tibble(read.csv("studyData/files/GCST007543_daner_meta_filtered_NA_iPSYCH23_PGC11_sigPCs_woSEX_2ell6sd_EUR_Neff_70.meta", sep = "\t"))
data2 = tibble(read.csv("GCST008414_CUD_GWAS_iPSYCH_June2019.tsv", sep = "\t"))
data2 = tibble(read.csv("studyData/files/GCST008414_CUD_GWAS_iPSYCH_June2019.tsv", sep = "\t"))
data1
data3
data2
data2 = tibble(read.csv("studyData/files/GCST008414_CUD_GWAS_iPSYCH_June2019.tsv", sep = " "))
data3
data2
formatted_data1 = data1
formatted_data2 = data2
# Save the formatted data
write.table(formatted_data1, "studyData/processed_files/GCST012597_buildGRCh37_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
# Save the formatted data
write.table(formatted_data2, "studyData/processed_files/GCST007543_daner_meta_filtered_NA_iPSYCH23_PGC11_sigPCs_woSEX_2ell6sd_EUR_Neff_70_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
# Save the formatted data
write.table(formatted_data1, "studyData/processed_files/GCST007543_daner_meta_filtered_NA_iPSYCH23_PGC11_sigPCs_woSEX_2ell6sd_EUR_Neff_70_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
write.table(formatted_data2, "studyData/processed_files/GCST008414_CUD_GWAS_iPSYCH_June2019_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
data1 = tibble(read.csv("studyData/files/GCST012597_buildGRCh37.tsv", sep = "\t"))
data2 = tibble(read.csv("studyData/files/GCST005362_buildGRCh37.tsv", sep = " "))
data2 = tibble(read.csv("studyData/files/GCST005362_buildGRCh37.tsv", sep = "\t"))
data1
data2
formatted_data1 = data1 %>%
dplyr::select(
SNP = variant_id,
CHR = chromosome,
BP = base_pair_location,
A1 = effect_allele,
A2 = other_allele,
OR = beta,  # assuming that 'beta' represents the odds ratio here
SE = standard_error,
P = p_value
)
formatted_data2 = data2 %>%
dplyr::select(
SNP = variant_id,
CHR = chromosome,
BP = base_pair_location,
A1 = effect_allele,
A2 = other_allele,
OR = beta,  # assuming that 'beta' represents the odds ratio here
SE = standard_error,
P = p_value
)
write.table(formatted_data1, "studyData/processed_files/GCST012597_buildGRCh37_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
write.table(formatted_data2, "studyData/processed_files/GCST005362_buildGRCh37_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
list.files("studyData/processed_files")
list.files("studyData/files")
data1 = tibble(read.csv("studyData/files/GCST012093_daner_natgen_pgc_eur", sep = "\t"))
data2 = tibble(read.csv("studyData/files/GCST012093_daner_PGC_BIP32b_mds7a_0416a", sep = "\t"))
data1
data2
data1 = tibble(read.csv("studyData/files/GCST012093_daner_natgen_pgc_eur", sep = ""))
data1 = tibble(read.csv("studyData/files/GCST012093_daner_natgen_pgc_eur", sep = " "))
data1
data2
# Save the formatted data
write.table(formatted_data1, "studyData/processed_files/GCST012093_daner_natgen_pgc_eur_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
write.table(formatted_data2, "studyData/processed_files/GCST012093_daner_PGC_BIP32b_mds7a_0416a_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
list.files("studyData/processed_files")
data1 = tibble(read.csv("studyData/files/GCST012093_iPSYCH-PGC_ASD_Nov2017", sep = " "))
data2 = tibble(read.csv("studyData/files/GCST012093_PGC_UKB_depression_genome-wide.txt", sep = "\t"))
data1
data2
data1 = tibble(read.csv("studyData/files/GCST012093_iPSYCH-PGC_ASD_Nov2017", sep = "\t"))
data2 = tibble(read.csv("studyData/files/GCST012093_PGC_UKB_depression_genome-wide.txt", sep = " "))
data1
data2
data1
data2
formatted_data1 = data1
# Save the formatted data
write.table(formatted_data1, "studyData/processed_files/GCST012093_iPSYCH-PGC_ASD_Nov2017_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
list.files("studyData/files")
data1 = tibble(read.csv("studyData/files/GCST012093_daner_natgen_pgc_eur", sep = " "))
data2 = tibble(read.csv("studyData/files/GCST012093_daner_PGC_BIP32b_mds7a_0416a", sep = "\t"))
data1
data2
formatted_data1 = data1
formatted_data2 = data2
# Save the formatted data
write.table(formatted_data1, "studyData/processed_files/GCST012093_daner_natgen_pgc_eur_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
write.table(formatted_data2, "studyData/processed_files/GCST012093_daner_PGC_BIP32b_mds7a_0416a_processed.txt", sep = "\t", row.names = FALSE, quote = FALSE)
data1 = tibble(read.csv("GCST007543_daner_meta_filtered_NA_iPSYCH23_PGC11_sigPCs_woSEX_2ell6sd_EUR_Neff_70.meta", sep = "\t"))
data2 = tibble(read.csv("GCST008414_CUD_GWAS_iPSYCH_June2019.tsv", sep = "\t"))
data1 = tibble(read.csv("studyData/files/GCST007543_daner_meta_filtered_NA_iPSYCH23_PGC11_sigPCs_woSEX_2ell6sd_EUR_Neff_70.meta", sep = "\t"))
data2 = tibble(read.csv("studyData/files/GCST008414_CUD_GWAS_iPSYCH_June2019.tsv", sep = "\t"))
data1
data1
data2
data2 = tibble(read.csv("studyData/files/GCST008414_CUD_GWAS_iPSYCH_June2019.tsv", sep = " "))
data2
data1
list.files("studyData/processed_files")
